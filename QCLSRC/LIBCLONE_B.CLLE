/* PGM        PARM(&SRCLIB &TGTDIR &DEVOPT &OMISSIBLE) */
PGM        PARM(&SRCLIB &LOCALPATH &DEVOPT &OMISSIBLE)
DCLPRCOPT  LOG(*YES) ALWRTVSRC(*NO)
COPYRIGHT  TEXT('Andrea Ribuoli Â© 2022 - PASERIE lib clone')
DCL        VAR(&SRCLIB)    TYPE(*CHAR) LEN(10)
DCL        VAR(&TGTDIR)    TYPE(*CHAR) LEN(10)
DCL        VAR(&LOCALPATH) TYPE(*CHAR) LEN(100)
DCL        VAR(&DEVOPT)    TYPE(*CHAR) LEN(1)
DCL        VAR(&OMISSIBLE) TYPE(*CHAR) LEN(1)
DCL        VAR(&RETLIB)    TYPE(*CHAR) LEN(10)
DCL        VAR(&SRCMBR)    TYPE(*CHAR) LEN(10)
DCL        VAR(&LASTMBR)   TYPE(*CHAR) LEN(10)
DCL        VAR(&SRCTYPE)   TYPE(*CHAR) LEN(10)
DCL        VAR(&SRCDESC)   TYPE(*CHAR) LEN(50)
DCL        VAR(&MSGID)     TYPE(*CHAR) LEN(7)
/* DCL        VAR(&CHECKPATH) TYPE(*CHAR) LEN(20) */
DCL        VAR(&CHECKPATH) TYPE(*CHAR) LEN(100)
DCL        VAR(&FROMMBR)   TYPE(*CHAR) LEN(100)
DCL        VAR(&TOSTMF)    TYPE(*CHAR) LEN(135)
DCL        VAR(&DIR)       TYPE(*CHAR) LEN(125)
DCL        VAR(&POS)       TYPE(*INT)  LEN(2)
DCL        VAR(&LPOS)       TYPE(*INT)  LEN(2)
DCL        VAR(&RTCD)      TYPE(*INT)  LEN(4)
DCL        VAR(&R_OK)      TYPE(*INT)  LEN(4)  VALUE(4)
DCL        VAR(&NL)        TYPE(*CHAR) LEN(1)  VALUE(X'00')
DCL        VAR(&LOOPEXT)   TYPE(*LGL)          VALUE('1')
DCL        VAR(&LOOP)      TYPE(*LGL)
DCL        VAR(&NO_BUILD)  TYPE(*LGL)          VALUE('1')
DCL        VAR(&NO_MAKEFL) TYPE(*LGL)          VALUE('1')
DCL        VAR(&NO_QCLSRC) TYPE(*LGL)          VALUE('1')
DCL        VAR(&NO_QMAKSRC) TYPE(*LGL)         VALUE('1')
DCL        VAR(&SPC_NAME)  TYPE(*CHAR) LEN(20) VALUE('SRCPFS    QTEMP     ')
DCL        VAR(&SPC_NAME2) TYPE(*CHAR) LEN(20) VALUE('PFATTR    QTEMP     ')
DCL        VAR(&SPC_SIZE)  TYPE(*INT)  LEN(4)  VALUE(1)
DCL        VAR(&SPC_SIZE2) TYPE(*INT)  LEN(4)  VALUE(8192)
DCL        VAR(&SPC_INIT)  TYPE(*CHAR) LEN(1)  VALUE(X'00')
DCL        VAR(&BLANKS)    TYPE(*CHAR) LEN(50)
DCL        VAR(&QFN)       TYPE(*CHAR) LEN(20)
DCL        VAR(&QFILE)     TYPE(*CHAR) LEN(10) STG(*DEFINED) DEFVAR(&QFN  1)
DCL        VAR(&QLIB)      TYPE(*CHAR) LEN(10) STG(*DEFINED) DEFVAR(&QFN  11)
DCL        VAR(&QRETFN)    TYPE(*CHAR) LEN(20)
DCL        VAR(&QREQFN)    TYPE(*CHAR) LEN(20)
DCL        VAR(&REQFILE)   TYPE(*CHAR) LEN(10) STG(*DEFINED) DEFVAR(&QREQFN  1)
DCL        VAR(&REQLIB)    TYPE(*CHAR) LEN(10) STG(*DEFINED) DEFVAR(&QREQFN  11)
DCL        VAR(&OBJTYPE)   TYPE(*CHAR) LEN(10) VALUE('*FILE')
DCL        VAR(&ERRCDE)    TYPE(*CHAR) LEN(16) VALUE(X'00000010')
DCL        VAR(&BYTPRV)    TYPE(*INT)  STG(*DEFINED) LEN(4) DEFVAR(&ERRCDE)
DCL        VAR(&BYTAVL)    TYPE(*INT)  STG(*DEFINED) LEN(4) DEFVAR(&ERRCDE 5)
DCL        VAR(&EMSGID)    TYPE(*CHAR) STG(*DEFINED) LEN(7) DEFVAR(&ERRCDE 9)
DCL        VAR(&ERRCDE2)   TYPE(*CHAR) LEN(16) VALUE(X'00000010')
DCL        VAR(&BYTPRV2)   TYPE(*INT)  STG(*DEFINED) LEN(4) DEFVAR(&ERRCDE2)
DCL        VAR(&BYTAVL2)   TYPE(*INT)  STG(*DEFINED) LEN(4) DEFVAR(&ERRCDE2 5)
DCL        VAR(&EMSGID2)   TYPE(*CHAR) STG(*DEFINED) LEN(7) DEFVAR(&ERRCDE2 9)
DCL        VAR(&SPCPTR)    TYPE(*PTR)
DCL        VAR(&LISTHDR)   TYPE(*CHAR) STG(*BASED)   LEN(192) BASPTR(&SPCPTR)
DCL        VAR(&LISTSTS)   TYPE(*CHAR) STG(*DEFINED) LEN(1) DEFVAR(&LISTHDR 104)
DCL        VAR(&PARHDROFS) TYPE(*INT)  STG(*DEFINED) LEN(4) DEFVAR(&LISTHDR 109)
DCL        VAR(&LSTENOFS)  TYPE(*INT)  STG(*DEFINED) LEN(4) DEFVAR(&LISTHDR 125)
DCL        VAR(&LSTENTNBR) TYPE(*INT)  STG(*DEFINED) LEN(4) DEFVAR(&LISTHDR 133)
DCL        VAR(&LSTENTSIZ) TYPE(*INT)  STG(*DEFINED) LEN(4) DEFVAR(&LISTHDR 137)
DCL        VAR(&SPCPTR2)   TYPE(*PTR)
DCL        VAR(&LISTHDR2)  TYPE(*CHAR) STG(*BASED)   LEN(8192) BASPTR(&SPCPTR2)
DCL        VAR(&BITS)      TYPE(*UINT) STG(*DEFINED) LEN(2) DEFVAR(&LISTHDR2 9)
DCL        VAR(&BITSMASK)  TYPE(*UINT)               LEN(2) VALUE(2048)
DCL        VAR(&LSTPTR)    TYPE(*PTR)
DCL        VAR(&LSTENT)    TYPE(*CHAR) STG(*BASED)   LEN(100) BASPTR(&LSTPTR)
DCL        VAR(&SRCFILE)   TYPE(*CHAR) STG(*DEFINED) LEN(10) DEFVAR(&LSTENT 1)
DCL        VAR(&CONTIN)    TYPE(*CHAR) STG(*DEFINED) LEN(20) DEFVAR(&LSTENT 11)
DCL        VAR(&ITER)      TYPE(*INT)  LEN(4)
DCL        VAR(&CHG_ATTR)  TYPE(*CHAR) LEN(13) VALUE(X'000000010000000300000001F1')
DCL        VAR(&NBR_ATTR)  TYPE(*INT)  STG(*DEFINED) LEN(4) DEFVAR(&CHG_ATTR  1)
DCL        VAR(&ATTR_KEY)  TYPE(*INT)  STG(*DEFINED) LEN(4) DEFVAR(&CHG_ATTR  5)
DCL        VAR(&DATA_SIZE) TYPE(*INT)  STG(*DEFINED) LEN(4) DEFVAR(&CHG_ATTR  9)
DCL        VAR(&ATTR_DATA) TYPE(*CHAR) STG(*DEFINED) LEN(1) DEFVAR(&CHG_ATTR 13)
DCL        VAR(&TOMBR) TYPE(*CHAR) LEN(150)
DCL        VAR(&MODE) TYPE(*INT) LEN(4) VALUE(7)
DCL        VAR(&OFLAG) TYPE(*INT) LEN(4) VALUE(16778570)
DCL        VAR(&FD) TYPE(*INT) LEN(4)
DCL        VAR(&NOFB) TYPE(*UINT) LEN(4) VALUE(81)
DCL        VAR(&RTCD) TYPE(*INT) LEN(4)
DCL        VAR(&ROW) TYPE(*CHAR) LEN(81)
DCL        VAR(&LINEFEED) TYPE(*CHAR) LEN(1) VALUE(X'25')
DCL        VAR(&MSGDTA) TYPE(*CHAR) LEN(121)
DCL        VAR(&CNTSDIR)   TYPE(*INT) LEN(4) VALUE(0)
DCL        VAR(&ELABORA_SZ) TYPE(*INT) LEN(4) VALUE(32000)
DCL        VAR(&ELABORA_P)   TYPE(*PTR)
DCL        VAR(&LSTPTRD)   TYPE(*PTR)
DCL        VAR(&LSTENTD)   TYPE(*CHAR) STG(*BASED)   LEN(10) BASPTR(&LSTPTRD)
DCL        VAR(&CNTSFIL2)  TYPE(*INT) LEN(4) VALUE(0)
DCL        VAR(&ELABORA2SZ) TYPE(*INT) LEN(4) VALUE(32000)
DCL        VAR(&ELABORA2_P)   TYPE(*PTR)
DCL        VAR(&LSTPTRD2)  TYPE(*PTR)
DCL        VAR(&LSTENTD2)  TYPE(*CHAR) STG(*BASED)   LEN(10) BASPTR(&LSTPTRD2)

MONMSG     MSGID(CPF9801) EXEC(GOTO CMDLBL(CHECK1))
MONMSG     MSGID(CPF9802) EXEC(GOTO CMDLBL(CHECK2))
CHKOBJ     OBJ(QSYS/&SRCLIB) OBJTYPE(*LIB) AUT(*READ)
/* IF         COND(&TGTDIR *EQ '*SRCLIB') THEN(CHGVAR VAR(&TGTDIR) VALUE(&SRCLIB)) */
/* CHGVAR     VAR(&CHECKPATH)   VALUE('./' *CAT &TGTDIR *TCAT &NL)                 */
/* CALLPRC    PRC('access') PARM((&CHECKPATH) (&R_OK *BYVAL)) RTNVAL(&RTCD)        */
/* IF         COND(&RTCD = 0) THEN(DO)                                             */
/* CHGVAR     VAR(&MSGDTA) VALUE('Directory or file ' *CAT &TGTDIR *TCAT +         */
/*                ' already present in current directory')                         */
/* CALLPRC    PRC('printf') PARM((&MSGDTA))                                        */
/* RETURN                                                                          */
/* ENDDO                                                                           */
IF         COND(&LOCALPATH *EQ '*SRCLIB') +
           THEN(CHGVAR VAR(&LOCALPATH) VALUE('./' *CAT &SRCLIB))
CHGVAR     VAR(&CHECKPATH) VALUE(&LOCALPATH *TCAT &NL)           
CALLPRC    PRC('access') PARM((&CHECKPATH) (&R_OK *BYVAL)) RTNVAL(&RTCD)
IF         COND(&RTCD = 0) THEN(DO)
CHGVAR     VAR(&MSGDTA) VALUE('Directory or file ' *CAT &LOCALPATH *TCAT +
               ' already present in current directory')
CALLPRC    PRC('printf') PARM((&MSGDTA))
RETURN
ENDDO
/* determine if subdir exists */
IF         COND(%SST(&LOCALPATH 1 1) *NE '/') +
           THEN(CHGVAR VAR(&LOCALPATH) VALUE('./' *CAT &LOCALPATH))
CHGVAR VAR(&LPOS) VALUE(0)
DOUNTIL COND('0')
CHGVAR VAR(&POS) VALUE(&LPOS + 1)
CHGVAR VAR(&LPOS) VALUE(%SCAN('/' &LOCALPATH &POS))
IF COND(&LPOS *EQ 0) THEN(LEAVE)
ENDDO
CHGVAR VAR(&LPOS) VALUE(&POS - 2)
CHGVAR VAR(&CHECKPATH) VALUE(%SST(&LOCALPATH 1 &LPOS) *CAT &NL)
CHGVAR VAR(&TGTDIR) VALUE(%SST(&LOCALPATH &POS 10))
CALLPRC    PRC('access') PARM((&CHECKPATH) (&R_OK *BYVAL)) RTNVAL(&RTCD)
IF         COND(&RTCD *NE 0) THEN(DO)
CHGVAR     VAR(&MSGDTA) VALUE('Directory ' *CAT %SST(&LOCALPATH 1 &LPOS) *CAT +
               ' does not exist: create it, if needed.')
CALLPRC    PRC('printf') PARM((&MSGDTA))
RETURN
ENDDO
CALLPRC    PRC('malloc') PARM((&ELABORA_SZ *BYVAL)) RTNVAL(&ELABORA_P)
CALLPRC    PRC('malloc') PARM((&ELABORA2SZ *BYVAL)) RTNVAL(&ELABORA2_P)
CHGJOB     JOBMSGQFL(*WRAP)
/* deallocate storage */
/* CALLPRC    PRC('free') PARM((&ELABORA_P *BYVAL)) */
/* CALLPRC    PRC('free') PARM((&ELABORA2_P *BYVAL)) */

/* MKDIR DIR(&TGTDIR) */
MKDIR DIR(&LOCALPATH)
CHGVAR VAR(&LSTPTRD) VALUE(&ELABORA_P)
CHGVAR VAR(&LSTPTRD2) VALUE(&ELABORA2_P)
CRTSRCPF FILE(QTEMP/QDDSPF)
CHGVAR VAR(&TOMBR) VALUE('/QSYS.LIB/QTEMP.LIB/QDDSPF.FILE/GUIDE00F.MBR')
CALLPRC PRC('open') PARM((&TOMBR) (&OFLAG *BYVAL) (&MODE *BYVAL)) RTNVAL(&FD)
CHGVAR VAR(&ROW) VALUE('                R GUIDE')
CALLSUBR SUBR(EMIT80)
CHGVAR VAR(&ROW) VALUE('                  SRCFILE       10A')
CALLSUBR SUBR(EMIT80)
CHGVAR VAR(&ROW) VALUE('                  SRCMBR        10A')
CALLSUBR SUBR(EMIT80)
CHGVAR VAR(&ROW) VALUE('                  SRCTYPE       10A')
CALLSUBR SUBR(EMIT80)
CHGVAR VAR(&ROW) VALUE('                  SRCDESC       50A')
CALLSUBR SUBR(EMIT80)
CALLPRC PRC('close') PARM((&FD *BYVAL)) RTNVAL(&RTCD)
CRTPF FILE(QTEMP/GUIDE00F) SRCFILE(QTEMP/QDDSPF) OPTION(*NOSRC *NOLIST)

CALL       PGM(QUSCRTUS) PARM(&SPC_NAME 'QUSLOBJ' &SPC_SIZE X'00' +
                              '*ALL' &BLANKS '*YES' &ERRCDE '*USER')
IF         COND(&BYTAVL *GT 0) THEN(DO)
SNDPGMMSG  MSG('Failure with QUSCRTUS (' *CAT &EMSGID *CAT ')') +
           TOPGMQ(*EXT)
RETURN
ENDDO

CALL       PGM(QUSCUSAT) PARM(&RETLIB &SPC_NAME &CHG_ATTR &ERRCDE)
IF         COND(&BYTAVL *GT 0) THEN(DO)
SNDPGMMSG  MSG('Failure with QUSCUSAT (' *CAT &EMSGID *CAT ')') +
           TOPGMQ(*EXT)
RETURN
ENDDO

CALL       PGM(QUSPTRUS) PARM(&SPC_NAME &SPCPTR &ERRCDE)
IF         COND(&BYTAVL *GT 0) THEN(DO)
SNDPGMMSG  MSG('Failure with QUSPTRUS (' *CAT &EMSGID *CAT ')') +
           TOPGMQ(*EXT)
RETURN
ENDDO


CALL       PGM(QUSCRTUS) PARM(&SPC_NAME2 'QDBRTVFD' +
                          &SPC_SIZE2 X'00' '*ALL' &BLANKS '*YES' +
                          &ERRCDE2 '*USER')
IF         COND(&BYTAVL2 *GT 0) THEN(DO)
SNDPGMMSG  MSG('Failure with QUSCRTUS (' *CAT &EMSGID2 *CAT ')') +
           TOPGMQ(*EXT)
RETURN
ENDDO

CALL       PGM(QUSCUSAT) PARM(&RETLIB &SPC_NAME2 &CHG_ATTR &ERRCDE2)
IF         COND(&BYTAVL2 *GT 0) THEN(DO)
SNDPGMMSG  MSG('Failure with QUSCUSAT (' *CAT &EMSGID2 *CAT ')') +
           TOPGMQ(*EXT)
RETURN
ENDDO

CALL       PGM(QUSPTRUS) PARM(&SPC_NAME2 &SPCPTR2 &ERRCDE2)
IF         COND(&BYTAVL2 *GT 0) THEN(DO)
SNDPGMMSG  MSG('Failure with QUSPTRUS (' *CAT &EMSGID2 *CAT ')') +
           TOPGMQ(*EXT)
RETURN
ENDDO

CHGVAR     VAR(&REQFILE) VALUE('*ALL')
CHGVAR     VAR(&REQLIB)  VALUE(&SRCLIB)
CALL       PGM(QUSLOBJ)  PARM(&SPC_NAME 'OBJL0100' &QREQFN &OBJTYPE &ERRCDE)
IF         COND(&BYTAVL *GT 0) THEN(DO)
SNDPGMMSG  MSG('Failure with QUSLOBJ (' *CAT &EMSGID *CAT ')') +
           TOPGMQ(*EXT)
RETURN
ENDDO
CHGVAR     VAR(&LSTPTR) VALUE(&SPCPTR)
CHGVAR     VAR(%OFFSET(&LSTPTR)) VALUE(%OFFSET(&LSTPTR) + &LSTENOFS)

CALLSUBR SUBR(SLSRCFILES)
IF COND(&NO_BUILD) THEN(DO)
 CRTSRCPF FILE(QTEMP/QTXT132) RCDLEN(132)
 CHGVAR VAR(&FROMMBR) VALUE('/QSYS.LIB/QTEMP.LIB/QTXT132.FILE/BUILD.MBR')
 CALLPRC PRC('open') PARM((&FROMMBR) (&OFLAG *BYVAL) (&MODE *BYVAL)) RTNVAL(&FD)
 CHGVAR VAR(&NOFB) VALUE(121)
 CHGVAR VAR(&MSGDTA) VALUE('/* GENERATED BY PASERIE/LIBCLONE */')  
 CALLSUBR SUBR(EMIT)
 CALLSUBR SUBR(GEN1CLLE) 
 CALLSUBR SUBR(GEN2CLLE) 
 CALLPRC PRC('close') PARM((&FD *BYVAL)) RTNVAL(&RTCD)
/* CHGVAR VAR(&TOSTMF) VALUE('./' *CAT &TGTDIR  *TCAT '/QCLSRC/BUILD.CLLE') */
 CHGVAR VAR(&TOSTMF) VALUE(&LOCALPATH *TCAT '/QCLSRC/BUILD.CLLE')
 CPYTOSTMF FROMMBR(&FROMMBR) TOSTMF(&TOSTMF) STMFCCSID(1208) ENDLINFMT(*LF)
 CHGVAR VAR(&SRCFILE) VALUE(QCLSRC)
 CHGVAR VAR(&SRCMBR)  VALUE(BUILD)
 CHGVAR VAR(&SRCTYPE) VALUE(CLLE)
 CHGVAR VAR(&SRCDESC) VALUE('BUILD CLLE auto-generated')
 RUNSQL SQL('INSERT INTO QTEMP/GUIDE00F (SRCFILE, SRCMBR, SRCTYPE, SRCDESC) +
                 VALUES (''' *CAT &SRCFILE *TCAT ''', +
                         ''' *CAT &SRCMBR  *TCAT ''', +
                         ''' *CAT &SRCTYPE *TCAT ''', +
                         ''' *CAT &SRCDESC *TCAT ''')') COMMIT(*NC)
 DLTF FILE(QTEMP/QTXT132)                       
ENDDO
IF COND(&NO_MAKEFL) THEN(DO)
 CRTSRCPF FILE(QTEMP/QTXT132) RCDLEN(132)
 CHGVAR VAR(&FROMMBR) VALUE('/QSYS.LIB/QTEMP.LIB/QTXT132.FILE/BUILD.MBR')
 CALLPRC PRC('open') PARM((&FROMMBR) (&OFLAG *BYVAL) (&MODE *BYVAL)) RTNVAL(&FD)
 CHGVAR VAR(&NOFB) VALUE(121)
 CHGVAR VAR(&MSGDTA) VALUE('## GENERATED BY PASERIE/LIBCLONE ##')  
  CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE('.SUFFIXES:')  
  CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE('.SUFFIXES: .<PGM> .<MODULE> .QCLSRC<FILE>')  
  CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' ')
  CALLSUBR SUBR(EMIT)
 CALLSUBR SUBR(GEN3CLLE)
 CALLPRC PRC('close') PARM((&FD *BYVAL)) RTNVAL(&RTCD)
/* CHGVAR VAR(&TOSTMF) VALUE('./' *CAT &TGTDIR  *TCAT '/QMAKSRC/BUILD.TXT') */
 CHGVAR VAR(&TOSTMF) VALUE(&LOCALPATH *TCAT '/QMAKSRC/BUILD.TXT')
 CPYTOSTMF FROMMBR(&FROMMBR) TOSTMF(&TOSTMF) STMFCCSID(1208) ENDLINFMT(*LF)
 CHGVAR VAR(&SRCFILE) VALUE(QMAKSRC)
 CHGVAR VAR(&SRCMBR)  VALUE(BUILD)
 CHGVAR VAR(&SRCTYPE) VALUE(TXT)
 CHGVAR VAR(&SRCDESC) VALUE('BUILD Makefile auto-generated')
 RUNSQL SQL('INSERT INTO QTEMP/GUIDE00F (SRCFILE, SRCMBR, SRCTYPE, SRCDESC) +
                 VALUES (''' *CAT &SRCFILE *TCAT ''', +
                         ''' *CAT &SRCMBR  *TCAT ''', +
                         ''' *CAT &SRCTYPE *TCAT ''', +
                         ''' *CAT &SRCDESC *TCAT ''')') COMMIT(*NC)
ENDDO
CPYF FROMFILE(QTEMP/GUIDE00F) TOFILE(QTEMP/QDDSPF) +
  FROMMBR(GUIDE00F) TOMBR(GUIDANCE) MBROPT(*ADD) FMTOPT(*CVTSRC)
CHGVAR VAR(&FROMMBR) VALUE('/QSYS.LIB/QTEMP.LIB/QDDSPF.FILE/GUIDANCE.MBR')
/* CHGVAR VAR(&TOSTMF) VALUE('./' *CAT &TGTDIR  *TCAT '/GUIDANCE.TXT') */
CHGVAR VAR(&TOSTMF) VALUE(&LOCALPATH *TCAT '/GUIDANCE.TXT')
CPYTOSTMF FROMMBR(&FROMMBR) TOSTMF(&TOSTMF) STMFCCSID(1208) ENDLINFMT(*LF)
RETURN

CHECK1: CHGVAR VAR(&MSGDTA) VALUE('Library ' *CAT &SRCLIB *TCAT ' does not exist')
CALLPRC    PRC('printf') PARM((&MSGDTA))
RETURN
CHECK2: CHGVAR VAR(&MSGDTA) VALUE('Not authorized to library ' *CAT &SRCLIB)
CALLPRC    PRC('printf') PARM((&MSGDTA))
RETURN
CHECK3: CHGVAR VAR(&MSGDTA) VALUE('Unusual error with library ' *CAT &SRCLIB)
CALLPRC    PRC('printf') PARM((&MSGDTA))
RETURN

SUBR SUBR(GEN1CLLE)
 CHGVAR VAR(&MSGDTA) VALUE('PGM PARM(&DEVOPT_P &TGTRLS_P &TGTLIB_P)')  
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' DCLPRCOPT LOG(*NO) ALWRTVSRC(*NO)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' DCL VAR(&DEVOPT_P) TYPE(*CHAR) LEN(1)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' DCL VAR(&DEVOPT) TYPE(*CHAR) LEN(1)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' DCL VAR(&TGTRLS_P) TYPE(*CHAR) LEN(10)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' DCL VAR(&TGTLIB_P) TYPE(*CHAR) LEN(10)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' DCL VAR(&TGTRLS) TYPE(*CHAR) LEN(10)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' DCL VAR(&SRCLIB) TYPE(*CHAR) LEN(10) VALUE(QTEMP)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' DCL VAR(&BLDLIB) TYPE(*CHAR) LEN(10) VALUE(QTEMP)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' DCL VAR(&TGTLIB) TYPE(*CHAR) LEN(10)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' DCL VAR(&IFSPATH) TYPE(*CHAR) LEN(100)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' DCL VAR(&MACRO1) TYPE(*CHAR) LEN(20)') 
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' DCL VAR(&MACRO2) TYPE(*CHAR) LEN(20)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' DCL VAR(&MACRO3) TYPE(*CHAR) LEN(20)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' DCL VAR(&MACRO4) TYPE(*CHAR) LEN(20)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' CHGVAR VAR(&DEVOPT) VALUE(&DEVOPT_P)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' MONMSG MSGID(MCH3601) EXEC(CHGVAR VAR(&DEVOPT) VALUE(L))')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' CHGVAR VAR(&TGTRLS) VALUE(&TGTRLS_P)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' MONMSG MSGID(MCH3601) EXEC(CHGVAR VAR(&TGTRLS) VALUE(*CURRENT))')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' CHGVAR VAR(&TGTLIB) VALUE(&TGTLIB_P)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' MONMSG MSGID(MCH3601) EXEC(CHGVAR VAR(&TGTLIB) VALUE(*PACKAGEN))')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' IF COND(&TGTLIB = ''*PACKAGEN '') THEN(CHGVAR VAR(&TGTLIB) VALUE(' *CAT &TGTDIR *TCAT '))')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' /* CRTLIB LIB(&TGTLIB) */')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' /* MONMSG MSGID(CPF0000) */')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' IF COND(&DEVOPT = ''N'') THEN(DO)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&LSTPTRD) VALUE(&ELABORA_P)
 DOFOR VAR(&ITER) FROM(1) TO(&CNTSDIR)
  CHGVAR VAR(&MSGDTA) VALUE('  DLTF FILE(&TGTLIB/' *CAT &LSTENTD *TCAT ')')
 CALLSUBR SUBR(EMIT)
  CHGVAR VAR(&MSGDTA) VALUE('  MONMSG MSGID(CPF0000)')
 CALLSUBR SUBR(EMIT)
  CHGVAR VAR(%OFFSET(&LSTPTRD)) VALUE(%OFFSET(&LSTPTRD) + 10)
 ENDDO
 CHGVAR VAR(&MSGDTA) VALUE('  DLTPGM PGM(&TGTLIB/BUILD)')  
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA)  VALUE('  MONMSG MSGID(CPF0000)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' ENDDO')
 CALLSUBR SUBR(EMIT)
ENDSUBR

SUBR SUBR(GEN2CLLE)
 CHGVAR VAR(&MSGDTA) VALUE(' IF COND(&DEVOPT = ''Y'') THEN(DO)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&LSTPTRD) VALUE(&ELABORA_P)
 DOFOR VAR(&ITER) FROM(1) TO(&CNTSDIR)
  CHGVAR VAR(&MSGDTA) VALUE('  CRTSRCPF FILE(&TGTLIB/' *CAT &LSTENTD *TCAT ') RCDLEN(132)')  
 CALLSUBR SUBR(EMIT)
  CHGVAR VAR(&MSGDTA) VALUE('  MONMSG MSGID(CPF0000)')
 CALLSUBR SUBR(EMIT)
  CHGVAR VAR(%OFFSET(&LSTPTRD)) VALUE(%OFFSET(&LSTPTRD) + 10)
 ENDDO
 CHGVAR VAR(&LSTPTRD) VALUE(&ELABORA_P)
 DOFOR VAR(&ITER) FROM(1) TO(&CNTSDIR)
  CHGVAR VAR(&MSGDTA) VALUE('  CPYSRCF FROMFILE(&SRCLIB/' *CAT &LSTENTD *TCAT +
                      ') TOFILE(&TGTLIB/' *CAT &LSTENTD *TCAT ') FROMMBR(*ALL)')  
  CALLSUBR SUBR(EMIT)
  CHGVAR VAR(&MSGDTA) VALUE('  MONMSG MSGID(CPF2817)')
  CALLSUBR SUBR(EMIT)
  CHGVAR VAR(%OFFSET(&LSTPTRD)) VALUE(%OFFSET(&LSTPTRD) + 10)
 ENDDO
 CHGVAR VAR(&MSGDTA) VALUE('  CHGVAR VAR(&SRCLIB) VALUE(&TGTLIB)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' ENDDO')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' IF COND(&DEVOPT = ''L'') THEN(DO)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE('  CHGVAR VAR(&SRCLIB) VALUE(&TGTLIB)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE('  CHGVAR VAR(&BLDLIB) VALUE(&TGTLIB)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' ENDDO')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' IF COND(&DEVOPT = ''Y'') THEN(DO)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE('  CRTBNDCL PGM(&TGTLIB/BUILD) SRCFILE(&SRCLIB/QCLSRC)' +
                              *BCAT 'SRCMBR(BUILD) OUTPUT(*NONE) ALWRTVSRC(*NO)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' ENDDO')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' CHGVAR VAR(&MACRO1) VALUE(''SRCLIB='' *CAT &SRCLIB)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' CHGVAR VAR(&MACRO2) VALUE(''BLDLIB='' *CAT &BLDLIB)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' CHGVAR VAR(&MACRO3) VALUE(''TGTLIB='' *CAT &TGTLIB)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' CHGVAR VAR(&MACRO4) VALUE(''TGTRLS='' *CAT &TGTRLS)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' ADDLIBLE LIB(&SRCLIB)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' MONMSG MSGID(CPF2103)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' ADDLIBLE LIB(TMKMAKE)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' MONMSG MSGID(CPF2103)')
  CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' MONMSG MSGID(CPF2182)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' MONMSG MSGID(CPF2110) EXEC(GOTO CMDLBL(OMIT_MAKE))')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE(' TMKMAKE SRCFILE(&SRCLIB/QMAKSRC)' *BCAT +
                           'SRCMBR(BUILD) MACRO(&MACRO1 &MACRO2 &MACRO3 &MACRO4)') 
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE('OMIT_MAKE: ENDPGM')
 CALLSUBR SUBR(EMIT)
ENDSUBR

SUBR SUBR(GEN3CLLE)
 CHGVAR VAR(&LSTPTRD2) VALUE(&ELABORA2_P)
 CHGVAR VAR(&MSGDTA) VALUE(&LSTENTD2 *TCAT '<PGM>:')
 DOFOR VAR(&ITER) FROM(1) TO(&CNTSFIL2)
  CHGVAR VAR(&MSGDTA) VALUE(&MSGDTA *TCAT ' ' *CAT &LSTENTD2 *TCAT '<MODULE>')
  CHGVAR VAR(%OFFSET(&LSTPTRD2)) VALUE(%OFFSET(&LSTPTRD2) + 10)
 ENDDO
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&LSTPTRD2) VALUE(&ELABORA2_P)
 CHGVAR VAR(&MSGDTA) VALUE('     CRTPGM PGM(&TGTLIB/' *TCAT &LSTENTD2 *TCAT ') +')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE('      MODULE(&BLDLIB/' *TCAT &LSTENTD2)
 CHGVAR VAR(%OFFSET(&LSTPTRD2)) VALUE(%OFFSET(&LSTPTRD2) + 10)
 DOFOR VAR(&ITER) FROM(2) TO(&CNTSFIL2)
  CHGVAR VAR(&MSGDTA) VALUE(&MSGDTA *TCAT ' &BLDLIB/' *CAT &LSTENTD2)
  CHGVAR VAR(%OFFSET(&LSTPTRD2)) VALUE(%OFFSET(&LSTPTRD2) + 10)
 ENDDO
 CHGVAR VAR(&MSGDTA) VALUE(&MSGDTA *TCAT ') +')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&MSGDTA) VALUE('      TGTRLS(&TGTRLS)')
 CALLSUBR SUBR(EMIT)
 CHGVAR VAR(&LSTPTRD2) VALUE(&ELABORA2_P)
 CHGVAR VAR(&MSGDTA) VALUE(' ')
 CALLSUBR SUBR(EMIT)
 DOFOR VAR(&ITER) FROM(1) TO(&CNTSFIL2)
  CHGVAR VAR(&MSGDTA) VALUE(&LSTENTD2 *TCAT '<MODULE>:' *BCAT &LSTENTD2 *TCAT '.QCLSRC<FILE>')
  CALLSUBR SUBR(EMIT)
  CHGVAR VAR(&MSGDTA) VALUE('     CRTCLMOD MODULE(&BLDLIB/' *CAT &LSTENTD2 *TCAT ') +')
  CALLSUBR SUBR(EMIT)
  CHGVAR VAR(&MSGDTA) VALUE('     SRCFILE(&SRCLIB/QCLSRC) TGTRLS(&TGTRLS) OUTPUT(*NONE)')
  CALLSUBR SUBR(EMIT)
  CHGVAR VAR(&MSGDTA) VALUE(' ')
  CALLSUBR SUBR(EMIT)
  CHGVAR VAR(%OFFSET(&LSTPTRD2)) VALUE(%OFFSET(&LSTPTRD2) + 10)
 ENDDO
ENDSUBR

SUBR SUBR(SLSRCFILES)
 DOFOR VAR(&ITER) FROM(1) TO(&LSTENTNBR)
/*  CHGVAR VAR(&DIR) VALUE(&TGTDIR *TCAT '/' *CAT &SRCFILE) */
  CHGVAR VAR(&DIR) VALUE(&LOCALPATH *TCAT '/' *CAT &SRCFILE)
  CALLSUBR SUBR(CPYSRCFILE)
  CHGVAR     VAR(%OFFSET(&LSTPTR)) VALUE(%OFFSET(&LSTPTR) + &LSTENTSIZ)
 ENDDO
 IF COND(&NO_QCLSRC) THEN(DO)
   CHGVAR VAR(&SRCFILE) VALUE(QCLSRC)
/*  CHGVAR VAR(&DIR) VALUE(&TGTDIR *TCAT '/' *CAT &SRCFILE) */
   CHGVAR VAR(&DIR) VALUE(&LOCALPATH *TCAT '/' *CAT &SRCFILE)
   CALLSUBR SUBR(MANAGEDIR) 
 ENDDO
 IF COND(&NO_QMAKSRC) THEN(DO)
   CHGVAR VAR(&SRCFILE) VALUE(QMAKSRC)
/* CHGVAR VAR(&DIR) VALUE(&TGTDIR *TCAT '/' *CAT &SRCFILE) */
   CHGVAR VAR(&DIR) VALUE(&LOCALPATH *TCAT '/' *CAT &SRCFILE)
   CALLSUBR SUBR(MANAGEDIR) 
 ENDDO
ENDSUBR

SUBR SUBR(MANAGEDIR)
 MKDIR DIR(&DIR) 
 CHGVAR VAR(&LSTENTD) VALUE(&SRCFILE)
 CHGVAR VAR(&CNTSDIR) VALUE(&CNTSDIR + 1)
 CHGVAR VAR(%OFFSET(&LSTPTRD)) VALUE(%OFFSET(&LSTPTRD) + 10)
ENDSUBR

SUBR SUBR(CPYSRCFILE)
CHGVAR VAR(&LOOP)  VALUE('1')
CHGVAR VAR(&QFILE) VALUE(&SRCFILE)
CHGVAR VAR(&QLIB)  VALUE(&SRCLIB)
CALL QDBRTVFD PARM(&LISTHDR2 &SPC_SIZE2 &QRETFN 'FILD0100' &QFN '*FIRST    ' +
                   '0' '*LCL      ' '*INT      ' &ERRCDE2)
IF         COND(&BYTAVL2 *GT 0) THEN(DO)
/* SNDPGMMSG  MSG('Failure with QDBRTVFD (' *CAT &EMSGID2 *CAT ')') */
IF COND(&EMSGID2 = 'CPF3C23') THEN(RTNSUBR)
RETURN
ENDDO

CHGVAR VAR(&BITS) VALUE(&BITS * 16)
CHGVAR VAR(&BITS) VALUE(&BITS / 32768)
IF         COND(&BITS *NE 1) THEN(RTNSUBR)

RTVMBRD FILE(&SRCLIB/&SRCFILE) MBR(*FIRSTMBR *SAME) RTNMBR(&SRCMBR) +
                              SRCTYPE(&SRCTYPE) TEXT(&SRCDESC)
MONMSG MSGID(CPF0000) EXEC(RTNSUBR)
CALLSUBR SUBR(MANAGEDIR)

DOWHILE COND(&LOOP)
 SNDPGMMSG MSG('Processing' *BCAT &SRCLIB *TCAT ' ' *CAT &SRCFILE *TCAT ' ' *CAT &SRCMBR)
 IF COND(&SRCFILE *EQ 'QCLSRC') THEN(DO)
  CHGVAR VAR(&NO_QCLSRC) VALUE('0')
  IF COND(&SRCMBR *EQ 'BUILD') THEN(CHGVAR VAR(&NO_BUILD) VALUE('0'))
  ELSE DO 
   CHGVAR VAR(&LSTENTD2) VALUE(&SRCMBR)
   CHGVAR VAR(&CNTSFIL2) VALUE(&CNTSFIL2 + 1)
   CHGVAR VAR(%OFFSET(&LSTPTRD2)) VALUE(%OFFSET(&LSTPTRD2) + 10)   
  ENDDO 
ENDDO 

 IF COND(&SRCFILE *EQ 'QMAKSRC') THEN(CHGVAR VAR(&NO_QMAKSRC) VALUE('0'))
  IF COND((&SRCFILE *EQ 'QMAKSRC') *AND (&SRCMBR *EQ 'BUILD')) +
   THEN(CHGVAR VAR(&NO_MAKEFL) VALUE('0'))
 CHGVAR VAR(&FROMMBR) VALUE('/QSYS.LIB/' *CAT &SRCLIB *TCAT '.LIB/' *CAT &SRCFILE +
                          *TCAT '.FILE/' *CAT &SRCMBR *TCAT '.MBR')
/* CHGVAR VAR(&TOSTMF) VALUE('./' *CAT &TGTDIR  *TCAT '/' + */
 CHGVAR VAR(&TOSTMF) VALUE(&LOCALPATH *TCAT '/' +
                                *CAT &SRCFILE *TCAT '/' +
                                *CAT &SRCMBR  *TCAT '.' *CAT &SRCTYPE)
 CPYTOSTMF FROMMBR(&FROMMBR) TOSTMF(&TOSTMF) STMFCCSID(1208) ENDLINFMT(*LF)
 MONMSG MSGID(CPDA082) EXEC(LEAVE)
 IF COND(%SCAN('''' &SRCDESC 1) *NE 0) THEN(CHGVAR VAR(&SRCDESC) VALUE(' '))
 RUNSQL SQL('INSERT INTO QTEMP/GUIDE00F (SRCFILE, SRCMBR, SRCTYPE, SRCDESC) +
                 VALUES (''' *CAT &SRCFILE *TCAT ''', +
                         ''' *CAT &SRCMBR  *TCAT ''', +
                         ''' *CAT &SRCTYPE *TCAT ''', +
                         ''' *CAT &SRCDESC *TCAT ''')') COMMIT(*NC)
 CHGVAR VAR(&LASTMBR) VALUE(&SRCMBR)
 RTVMBRD FILE(&SRCLIB/&SRCFILE) MBR(&LASTMBR *NEXT) RTNMBR(&SRCMBR) +
                              SRCTYPE(&SRCTYPE) TEXT(&SRCDESC)
 MONMSG MSGID(CPF3049) EXEC(LEAVE)
ENDDO
ENDSUBR

SUBR SUBR(EMIT)
  CHGVAR VAR(&MSGDTA) VALUE(%SST(&MSGDTA 1 120) *CAT &LINEFEED)
  CALLPRC PRC('write') PARM((&FD *BYVAL) (&MSGDTA) (&NOFB *BYVAL)) RTNVAL(&RTCD)
ENDSUBR

SUBR SUBR(EMIT80)
  CHGVAR VAR(&ROW) VALUE(%SST(&ROW 1 80) *CAT &LINEFEED)
  CALLPRC PRC('write') PARM((&FD *BYVAL) (&ROW) (&NOFB *BYVAL)) RTNVAL(&RTCD)
ENDSUBR

ENDPGM
