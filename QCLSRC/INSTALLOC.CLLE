PGM        PARM(&LOCALPATH &TGTLIB &DEVOPT &JTMPLOP &TGTRLS &OMISSIBLE)
COPYRIGHT  TEXT('Andrea Ribuoli Â© 2022 - PASERIE Local Inst')
DCL        VAR(&LOCALPATH)  TYPE(*CHAR) LEN(100)
DCL        VAR(&LOCALPATH0) TYPE(*CHAR) LEN(101)
DCL        VAR(&GUID_N_BLD) TYPE(*CHAR) LEN(124)
DCL        VAR(&TGTLIB)    TYPE(*CHAR) LEN(10)
DCL        VAR(&DEVOPT)     TYPE(*CHAR) LEN(1)
DCL        VAR(&JTMPLOP)    TYPE(*CHAR) LEN(10)
DCL        VAR(&TGTRLS)     TYPE(*CHAR) LEN(10)
DCL        VAR(&OMISSIBLE)  TYPE(*CHAR) LEN(1)
DCL        VAR(&VERBOSE)    TYPE(*CHAR) LEN(1)
DCL        VAR(&VERBOSE0)   TYPE(*CHAR) LEN(2)
DCL        VAR(&TGTRLS0)    TYPE(*CHAR) LEN(11)
DCL        VAR(&TGTLIB0)    TYPE(*CHAR) LEN(11)
DCL        VAR(&DEVOPT0)    TYPE(*CHAR) LEN(2)
DCL        VAR(&PID)        TYPE(*INT)  LEN(4)
DCL        VAR(&ERRPTR)   TYPE(*PTR)
DCL        VAR(&ERRNO)    TYPE(*INT) STG(*BASED) LEN(4) BASPTR(&ERRPTR)
DCL        VAR(&NULL_P)   TYPE(*PTR) ADDRESS(*NULL)
DCL        VAR(&ARGV)     TYPE(*CHAR) LEN(112)
DCL        VAR(&ARG0_P)   TYPE(*PTR) STG(*DEFINED) DEFVAR(&ARGV  1)
DCL        VAR(&ARG1_P)   TYPE(*PTR) STG(*DEFINED) DEFVAR(&ARGV 17)
DCL        VAR(&ARG2_P)   TYPE(*PTR) STG(*DEFINED) DEFVAR(&ARGV 33)
DCL        VAR(&ARG3_P)   TYPE(*PTR) STG(*DEFINED) DEFVAR(&ARGV 49)
DCL        VAR(&ARG4_P)   TYPE(*PTR) STG(*DEFINED) DEFVAR(&ARGV 65)
DCL        VAR(&ARG5_P)   TYPE(*PTR) STG(*DEFINED) DEFVAR(&ARGV 81)
DCL        VAR(&ARG5_P)   TYPE(*PTR) STG(*DEFINED) DEFVAR(&ARGV 97)
DCL        VAR(&ARGV_P)   TYPE(*PTR) ADDRESS(&ARGV)
DCL        VAR(&INHERIT)  TYPE(*CHAR) LEN(32)
DCL        VAR(&FLAGS)    TYPE(*UINT) LEN(4) STG(*DEFINED) DEFVAR(&INHERIT 1)
DCL        VAR(&PGROUP)   TYPE(*INT)  LEN(4) STG(*DEFINED) DEFVAR(&INHERIT 5)
DCL        VAR(&SIGMASK)  TYPE(*UINT) LEN(8) STG(*DEFINED) DEFVAR(&INHERIT 9)
DCL        VAR(&SIGDEFT)  TYPE(*UINT) LEN(8) STG(*DEFINED) DEFVAR(&INHERIT 17)
DCL        VAR(&INHER_P)  TYPE(*PTR) ADDRESS(&INHERIT)
DCL        VAR(&JOBINFO)  TYPE(*CHAR) LEN(42)
DCL        VAR(&JOBNME)   TYPE(*CHAR) LEN(10) STG(*DEFINED) DEFVAR(&JOBINFO 1)
DCL        VAR(&USRNME)   TYPE(*CHAR) LEN(10) STG(*DEFINED) DEFVAR(&JOBINFO 11)
DCL        VAR(&JOBNUM)   TYPE(*CHAR) LEN(6)  STG(*DEFINED) DEFVAR(&JOBINFO 21)
DCL        VAR(&JOBID)    TYPE(*CHAR) LEN(16) STG(*DEFINED) DEFVAR(&JOBINFO 27)
DCL        VAR(&JOBI_P)   TYPE(*PTR) ADDRESS(&JOBINFO)
DCL        VAR(&FILTER)   TYPE(*CHAR) LEN(44)
DCL        VAR(&F_LEN)    TYPE(*INT)  LEN(4)  STG(*DEFINED) DEFVAR(&FILTER 1)
DCL        VAR(&F_DAYS)   TYPE(*INT)  LEN(4)  STG(*DEFINED) DEFVAR(&FILTER 5)
DCL        VAR(&F_JNAM)   TYPE(*CHAR) LEN(10) STG(*DEFINED) DEFVAR(&FILTER 9)
DCL        VAR(&F_JUSR)   TYPE(*CHAR) LEN(10) STG(*DEFINED) DEFVAR(&FILTER 19)
DCL        VAR(&F_JNUM)   TYPE(*CHAR) LEN(6)  STG(*DEFINED) DEFVAR(&FILTER 29)
DCL        VAR(&F_JLOG)   TYPE(*CHAR) LEN(10) STG(*DEFINED) DEFVAR(&FILTER 35)
DCL        VAR(&RTCD)     TYPE(*INT)  LEN(4)
DCL        VAR(&STATUS)   TYPE(*INT)  LEN(4)
DCL        VAR(&OPTIONS)  TYPE(*INT)  LEN(4)
DCL        VAR(&NL)       TYPE(*CHAR) LEN(1) VALUE(X'00')
DCL        VAR(&JCURLOP)  TYPE(*CHAR) LEN(10)
DCL        VAR(&FILEPATH) TYPE(*CHAR) LEN(40) +
             VALUE('/QSYS.LIB/PASERIE.LIB/INSTALL_L.PGM')
DCL        VAR(&R_OK)     TYPE(*INT)  LEN(4) VALUE(4)
CHGVAR     VAR(&VERBOSE) VALUE(&OMISSIBLE)
MONMSG     MSGID(MCH3601) EXEC(CHGVAR VAR(&VERBOSE) VALUE('N'))
RTVJOBA    LOGOUTPUT(&JCURLOP)
CHGJOB     LOGOUTPUT(&JTMPLOP)
CHGVAR     VAR(&GUID_N_BLD)   VALUE(&LOCALPATH  *TCAT &NL)
CALLPRC    PRC('access') PARM((&GUID_N_BLD) (&R_OK *BYVAL)) RTNVAL(&RTCD)
IF         COND(&RTCD < 0) THEN(DO)
SNDPGMMSG  MSG('Directory ' *CAT &LOCALPATH *TCAT +
               ' not accessible')
GOTO CMDLBL(EXIT)
ENDDO
CHGVAR     VAR(&GUID_N_BLD)   VALUE(&LOCALPATH  *TCAT '/GUIDANCE.TXT' *CAT &NL)
CALLPRC    PRC('access') PARM((&GUID_N_BLD) (&R_OK *BYVAL)) RTNVAL(&RTCD)
IF         COND(&RTCD < 0) THEN(DO)
SNDPGMMSG  MSG('Directory ' *CAT &LOCALPATH *TCAT +
               ' without accessible GUIDANCE.TXT')
GOTO CMDLBL(EXIT)
ENDDO
CHGVAR     VAR(&GUID_N_BLD)   VALUE(&LOCALPATH  *TCAT '/QCLSRC' *CAT &NL)
CALLPRC    PRC('access') PARM((&GUID_N_BLD) (&R_OK *BYVAL)) RTNVAL(&RTCD)
IF         COND(&RTCD < 0) THEN(DO)
SNDPGMMSG  MSG('Directory ' *CAT &LOCALPATH *TCAT +
               ' without accessible QCLSRC sub-directory')
GOTO CMDLBL(EXIT)
ENDDO
CHGVAR     VAR(&GUID_N_BLD)   VALUE(&LOCALPATH  *TCAT '/QCLSRC/BUILD.CLLE' *CAT &NL)
CALLPRC    PRC('access') PARM((&GUID_N_BLD) (&R_OK *BYVAL)) RTNVAL(&RTCD)
IF         COND(&RTCD < 0) THEN(DO)
SNDPGMMSG  MSG('Directory ' *CAT &LOCALPATH *TCAT +
               ' without accessible QCLSRC/BUILD.CLLE')
GOTO CMDLBL(EXIT)
ENDDO
CHGVAR     VAR(&FILEPATH)   VALUE(&FILEPATH  *TCAT &NL)
CHGVAR     VAR(&LOCALPATH0) VALUE(&LOCALPATH *CAT  &NL)
CHGVAR     VAR(&TGTLIB0)    VALUE(&TGTLIB *CAT &NL)
CHGVAR     VAR(&DEVOPT0)    VALUE(&DEVOPT    *CAT  &NL)
CHGVAR     VAR(&TGTRLS0)    VALUE(&TGTRLS    *CAT  &NL)
CHGVAR     VAR(&VERBOSE0)   VALUE(&VERBOSE   *CAT  &NL)
/* The first element in the array, argv[0], is automatically set to the name of the program. */
/* Any value specified for argv[0] during the call to spawn() will be overwritten.           */
CHGVAR     VAR(&ARG0_P) VALUE(%ADDR(&LOCALPATH0))
CHGVAR     VAR(&ARG1_P) VALUE(%ADDR(&LOCALPATH0))
CHGVAR     VAR(&ARG2_P) VALUE(%ADDR(&TGTLIB0))
CHGVAR     VAR(&ARG3_P) VALUE(%ADDR(&DEVOPT0))
CHGVAR     VAR(&ARG4_P) VALUE(%ADDR(&TGTRLS0))
CHGVAR     VAR(&ARG5_P) VALUE(%ADDR(&VERBOSE0))
CHGVAR     VAR(&ARG6_P) VALUE(*NULL)
CHGVAR     VAR(&FLAGS)  VALUE(16)  /* SPAWN_SETTHREAD_NP */
CHGVAR     VAR(&PGROUP) VALUE(-1)
CHGVAR     VAR(&SIGMASK) VALUE(0)
CHGVAR     VAR(&SIGDEFT) VALUE(0)
CALLPRC    PRC('spawnp') PARM((&FILEPATH)       +
                              (0        *BYVAL) +
                              (&NULL_P  *BYVAL) +
                              (&INHER_P *BYVAL) +
                              (&ARGV_P  *BYVAL) +
                              (&NULL_P  ))   RTNVAL(&PID)
IF         COND(&PID < 0) THEN(DO)
CALLPRC    PRC('__errno') RTNVAL(&ERRPTR)
SNDPGMMSG  MSG('Non ha funzionato: spawnp =' *BCAT %CHAR(&PID) +
             *TCAT ' (errno ' *CAT %CHAR(&ERRNO) *TCAT ')')
GOTO CMDLBL(EXIT)
ENDDO
CALLPRC    PRC('Qp0wGetJobID') PARM((&PID *BYVAL) (&JOBI_P *BYVAL)) RTNVAL(&RTCD)
IF         COND(&RTCD < 0) THEN(DO)
SNDPGMMSG  MSG('Non ha funzionato: Qp0wGetJobID =' *BCAT %CHAR(&RTCD))
GOTO CMDLBL(EXIT)
ENDDO
CALLPRC    PRC('waitpid') PARM((&PID *BYVAL) (&STATUS *BYREF) (&OPTIONS *BYVAL)) RTNVAL(&RTCD)
IF         COND(&RTCD < 0) THEN(DO)
SNDPGMMSG  MSG('Non ha funzionato:  waitpid() =' *BCAT %CHAR(&RTCD))
GOTO CMDLBL(EXIT)
ENDDO
SNDPGMMSG  MSG(&JOBNME *TCAT ' completed.')
CHGVAR     VAR(&F_LEN)    VALUE(44)
CHGVAR     VAR(&F_DAYS)   VALUE(0)
CHGVAR     VAR(&F_JNAM)   VALUE(&JOBNME)
CHGVAR     VAR(&F_JUSR)   VALUE(&USRNME)
CHGVAR     VAR(&F_JNUM)   VALUE(&JOBNUM)
CHGVAR     VAR(&F_JLOG)   VALUE('*ALL      ')
CHGJOB     LOGOUTPUT(&JCURLOP)
DLYJOB     DLY(1)
CALL       PGM(QWTRMVJL) PARM(&FILTER  'RJLS0100' X'0000000000000000')
MONMSG     MSGID(CPF0000)
EXIT: ENDPGM
